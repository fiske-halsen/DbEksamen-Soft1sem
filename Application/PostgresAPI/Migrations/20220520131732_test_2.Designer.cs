// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PostgresAPI.Context;

#nullable disable

namespace PostgresAPI.Migrations
{
    [DbContext(typeof(DbApplicationContext))]
    [Migration("20220520131732_test_2")]
    partial class test_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PostgresAPI.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CityInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityInfoId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityInfoId = 1,
                            StreetName = "PusherStreet"
                        },
                        new
                        {
                            Id = 2,
                            CityInfoId = 1,
                            StreetName = "NemoLand"
                        });
                });

            modelBuilder.Entity("PostgresAPI.Models.CityInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CityInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Staden",
                            ZipCode = "2500"
                        });
                });

            modelBuilder.Entity("PostgresAPI.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("PostgresAPI.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuId")
                        .HasColumnType("integer");

                    b.Property<int>("MenuItemType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MenuId = 1,
                            MenuItemType = 1,
                            Name = "salatpizza",
                            Price = 79.989999999999995
                        },
                        new
                        {
                            Id = 2,
                            MenuId = 1,
                            MenuItemType = 1,
                            Name = "Peperoni",
                            Price = 79.230000000000004
                        },
                        new
                        {
                            Id = 3,
                            MenuId = 1,
                            MenuItemType = 1,
                            Name = "Calzone",
                            Price = 89.989999999999995
                        },
                        new
                        {
                            Id = 4,
                            MenuId = 1,
                            MenuItemType = 2,
                            Name = "ChokoladeIs",
                            Price = 39.990000000000002
                        },
                        new
                        {
                            Id = 5,
                            MenuId = 1,
                            MenuItemType = 2,
                            Name = "vaniljeis",
                            Price = 39.990000000000002
                        },
                        new
                        {
                            Id = 6,
                            MenuId = 1,
                            MenuItemType = 2,
                            Name = "chokoladekage",
                            Price = 39.990000000000002
                        },
                        new
                        {
                            Id = 7,
                            MenuId = 1,
                            MenuItemType = 0,
                            Name = "Cola",
                            Price = 19.989999999999998
                        },
                        new
                        {
                            Id = 8,
                            MenuId = 1,
                            MenuItemType = 0,
                            Name = "Fanta",
                            Price = 19.989999999999998
                        },
                        new
                        {
                            Id = 9,
                            MenuId = 1,
                            MenuItemType = 3,
                            Name = "Mayo",
                            Price = 9.9900000000000002
                        },
                        new
                        {
                            Id = 10,
                            MenuId = 1,
                            MenuItemType = 3,
                            Name = "Ketchup",
                            Price = 9.9900000000000002
                        },
                        new
                        {
                            Id = 11,
                            MenuId = 2,
                            MenuItemType = 1,
                            Name = "laks",
                            Price = 79.989999999999995
                        },
                        new
                        {
                            Id = 12,
                            MenuId = 2,
                            MenuItemType = 1,
                            Name = "tun",
                            Price = 79.230000000000004
                        },
                        new
                        {
                            Id = 13,
                            MenuId = 2,
                            MenuItemType = 1,
                            Name = "krabbe",
                            Price = 89.989999999999995
                        },
                        new
                        {
                            Id = 14,
                            MenuId = 2,
                            MenuItemType = 2,
                            Name = "ChokoladeIs",
                            Price = 39.990000000000002
                        },
                        new
                        {
                            Id = 15,
                            MenuId = 2,
                            MenuItemType = 2,
                            Name = "vaniljeis",
                            Price = 39.990000000000002
                        },
                        new
                        {
                            Id = 16,
                            MenuId = 2,
                            MenuItemType = 2,
                            Name = "chokoladekage",
                            Price = 39.990000000000002
                        },
                        new
                        {
                            Id = 17,
                            MenuId = 2,
                            MenuItemType = 0,
                            Name = "Cola",
                            Price = 19.989999999999998
                        },
                        new
                        {
                            Id = 18,
                            MenuId = 2,
                            MenuItemType = 0,
                            Name = "Fanta",
                            Price = 19.989999999999998
                        },
                        new
                        {
                            Id = 19,
                            MenuId = 2,
                            MenuItemType = 3,
                            Name = "Mayo",
                            Price = 9.9900000000000002
                        },
                        new
                        {
                            Id = 20,
                            MenuId = 2,
                            MenuItemType = 3,
                            Name = "Ketchup",
                            Price = 9.9900000000000002
                        });
                });

            modelBuilder.Entity("PostgresAPI.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<int>("MenuId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ResturantType")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("MenuId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            MenuId = 1,
                            Name = "PizzaPusheren",
                            ResturantType = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            MenuId = 2,
                            Name = "SushiSlyngeren",
                            ResturantType = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("PostgresAPI.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleType = 0
                        },
                        new
                        {
                            Id = 2,
                            RoleType = 1
                        });
                });

            modelBuilder.Entity("PostgresAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Niels@Andersen.dk",
                            LastName = "Andersen",
                            Name = "Niels",
                            Password = "1234",
                            PhoneNumber = "44334455",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "Restaurant@Ejer.dk",
                            LastName = "Ejer",
                            Name = "Restaurant",
                            Password = "1234",
                            PhoneNumber = "44334422",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "Restaurant@Ejer2.dk",
                            LastName = "Ejer2",
                            Name = "Restaurant2",
                            Password = "1234",
                            PhoneNumber = "44334432",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("PostgresAPI.Models.Address", b =>
                {
                    b.HasOne("PostgresAPI.Models.CityInfo", "CityInfo")
                        .WithMany("Addresses")
                        .HasForeignKey("CityInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityInfo");
                });

            modelBuilder.Entity("PostgresAPI.Models.MenuItem", b =>
                {
                    b.HasOne("PostgresAPI.Models.Menu", "Menu")
                        .WithMany("MenuItem")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("PostgresAPI.Models.Restaurant", b =>
                {
                    b.HasOne("PostgresAPI.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PostgresAPI.Models.Menu", "Menu")
                        .WithOne("Restaurant")
                        .HasForeignKey("PostgresAPI.Models.Restaurant", "MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PostgresAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Menu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PostgresAPI.Models.User", b =>
                {
                    b.HasOne("PostgresAPI.Models.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PostgresAPI.Models.CityInfo", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("PostgresAPI.Models.Menu", b =>
                {
                    b.Navigation("MenuItem");

                    b.Navigation("Restaurant")
                        .IsRequired();
                });

            modelBuilder.Entity("PostgresAPI.Models.Role", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
